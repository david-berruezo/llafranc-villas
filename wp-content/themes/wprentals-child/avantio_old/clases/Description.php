<?phpclass Description{    protected $table      = 'dynamic_taxonomy';    protected $primaryKey = 'id';    protected $allowedFields = ['id', 'language','text_title'];    # wordpress    private $post_id;    public function insertDescriptions($xml,$avantio_credentials)    {        # connect to database        $wpdb = Database::getInstance();        $inserts = array(); $services = array(); $update = array();        $counter_property = 0;        foreach($xml->Accommodation as $accommodation){            if($counter_property < 1){                $avantio_accomodations = intval($accommodation->AccommodationId);                foreach ($accommodation->InternationalizedItem as $international) {                    $language = (string)$international->Language;                    if (in_array($language, $avantio_credentials["ACTIVED_LANGUAGES"])) {                        $description = (string)$international->Description;                        $description = trim(strip_tags($description));                        $booking_url = (string)$international->BookingURL;                        # insert and update                        if (get_post_status($avantio_accomodations)) {                            $post = array(                                'ID' => $avantio_accomodations,                                'post_content' => $description                            );                            $this->post_id = wp_update_post($post);                        }// end if                    }// end if                }// end foreach            }// end if            $counter_property++;        }// end foreach    } // end function    private function add_two_primary_keys()    {        $forge = \Config\Database::forge();        $forge->addKey('id', TRUE);        $forge->addKey('language', TRUE);    } // end function    private function insertar_actualizar()    {        $data = [            'id'            => "",            'language'      => "",            'text_title'    => ""        ];        $this->save($data);    } // end function}// end class?>