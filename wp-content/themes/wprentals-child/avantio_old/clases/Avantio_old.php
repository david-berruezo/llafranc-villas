<?php/** * Created by PhpStorm. * User: DAVID01 * Date: 21/09/2021 * Time: 10:41 */class Avantio{    public function __construct()    {        // construct function        # register_post_type('estate_property', array(        # register_taxonomy('property_category', 'estate_property', array(        # register_taxonomy('property_action_category', 'estate_property', array(        # register_taxonomy('property_city', 'estate_property', array(        # register_taxonomy('property_area', 'estate_property', array(        # register_taxonomy('property_features', 'estate_property', array(        # register_taxonomy('property_status', 'estate_property', array(    }// end function    public function create_info()    {        # custom post type        $this->create_post_type_estate_property();        # taxonomy        $this->create_taxonomy_property_category();        $this->create_taxonomy_property_action_category();        $this->create_taxonomy_property_area();        $this->create_taxonomy_property_city();        $this->create_taxonomy_property_features();        $this->create_taxonomy_property_status();        # pages        $this->create_estate_pages();    } // end function    public function insert_info()    {        # custom post type        $this->insert_estate_property();        # taxonomy        /*        $this->insert_taxonomy_property_category();        $this->insert_taxonomy_property_action_category();        $this->insert_taxonomy_property_area();        $this->insert_taxonomy_property_city();        $this->insert_taxonomy_property_features();        $this->insert_taxonomy_property_status();        */        # pages        // falta    } // end function    private function create_post_type_estate_property()    {        $rewrites = wpestate_safe_rewite();        if (isset($rewrites[0])) {            $slug = $rewrites[0];        } else {            $slug = 'properties';        }        register_post_type('estate_property', array(                'labels' => array(                    'name' => esc_html__('Listings', 'wprentals-core'),                    'singular_name' => esc_html__('Listing', 'wprentals-core'),                    'add_new' => esc_html__('Add New Listing', 'wprentals-core'),                    'add_new_item' => esc_html__('Add Listing', 'wprentals-core'),                    'edit' => esc_html__('Edit', 'wprentals-core'),                    'edit_item' => esc_html__('Edit Listings', 'wprentals-core'),                    'new_item' => esc_html__('New Listing', 'wprentals-core'),                    'view' => esc_html__('View', 'wprentals-core'),                    'view_item' => esc_html__('View Listings', 'wprentals-core'),                    'search_items' => esc_html__('Search Listings', 'wprentals-core'),                    'not_found' => esc_html__('No Listings found', 'wprentals-core'),                    'not_found_in_trash' => esc_html__('No Listings found in Trash', 'wprentals-core'),                    'parent' => esc_html__('Parent Listings', 'wprentals-core')                ),                'public' => true,                'has_archive' => true,                'rewrite' => array('slug' => $slug),                'supports' => array('title', 'editor', 'thumbnail', 'comments', 'excerpt'),                'can_export' => true,                'register_meta_box_cb' => 'wpestate_add_property_metaboxes',                'menu_icon' => WPESTATE_PLUGIN_DIR_URL . '/img/properties.png'            )        );    } // end function    private function create_taxonomy_property_category()    {        $category_main_label = stripslashes(esc_html(wprentals_get_option('wp_estate_category_main', '')));        $category_second_label = stripslashes(esc_html(wprentals_get_option('wp_estate_category_second', '')));        $name_label = esc_html__('Categories', 'wprentals-core');        $add_new_item_label = esc_html__('Add New Listing Category', 'wprentals-core');        $new_item_name_label = esc_html__('New Listing Category', 'wprentals-core');        if ($category_main_label != '') {            $name_label = $category_main_label;            $add_new_item_label = esc_html__('Add New', 'wprentals-core') . ' ' . $category_main_label;            $new_item_name_label = esc_html__('New', 'wprentals-core') . ' ' . $category_main_label;        }        $rewrites = wpestate_safe_rewite();        if (isset($rewrites[1])) {            $slug = $rewrites[1];        } else {            $slug = 'listings';        }        register_taxonomy('property_category', 'estate_property', array(                'labels' => array(                    'name' => $name_label,                    'add_new_item' => $add_new_item_label,                    'new_item_name' => $new_item_name_label                ),                'hierarchical' => true,                'query_var' => true,                'rewrite' => array('slug' => $slug)            )        );    } // end function    private function create_taxonomy_property_action_category()    {        $category_main_label = stripslashes(esc_html(wprentals_get_option('wp_estate_category_main', '')));        $category_second_label = stripslashes(esc_html(wprentals_get_option('wp_estate_category_second', '')));        $action_name = esc_html__('What do you rent ?', 'wprentals-core');        $action_add_new_item = esc_html__('Add new option for "What do you rent" ', 'wprentals-core');        $action_new_item_name = esc_html__('Add new option for "What do you rent"', 'wprentals-core');        if ($category_second_label != '') {            $action_name = $category_second_label;            $action_add_new_item = esc_html__('Add New', 'wprentals-core') . ' ' . $category_second_label;            $action_new_item_name = esc_html__('New', 'wprentals-core') . ' ' . $category_second_label;        }        $rewrites = wpestate_safe_rewite();        if (isset($rewrites[2])) {            $slug = $rewrites[2];        } else {            $slug = 'action';        }        // add custom taxonomy        register_taxonomy('property_action_category', 'estate_property', array(                'labels' => array(                    'name' => $action_name,                    'add_new_item' => $action_add_new_item,                    'new_item_name' => $action_new_item_name                ),                'hierarchical' => true,                'query_var' => true,                'rewrite' => array('slug' => $slug)            )        );    }    private function create_taxonomy_property_city()    {        $category_main_label = stripslashes(esc_html(wprentals_get_option('wp_estate_category_main', '')));        $category_second_label = stripslashes(esc_html(wprentals_get_option('wp_estate_category_second', '')));        $rewrites = wpestate_safe_rewite();        if (isset($rewrites[3])) {            $slug = $rewrites[3];        } else {            $slug = 'city';        }        // add custom taxonomy        register_taxonomy('property_city', 'estate_property', array(                'labels' => array(                    'name' => esc_html__('City', 'wprentals-core'),                    'add_new_item' => esc_html__('Add New City', 'wprentals-core'),                    'new_item_name' => esc_html__('New City', 'wprentals-core')                ),                'hierarchical' => true,                'query_var' => true,                'rewrite' => array('slug' => $slug)            )        );    } // end function    private function create_taxonomy_property_area()    {        $category_main_label = stripslashes(esc_html(wprentals_get_option('wp_estate_category_main', '')));        $category_second_label = stripslashes(esc_html(wprentals_get_option('wp_estate_category_second', '')));        $rewrites   =   wpestate_safe_rewite();        if(isset($rewrites[4])){            $slug=$rewrites[4];        }else{            $slug='area';        }        // add custom taxonomy        register_taxonomy('property_area', 'estate_property', array(                'labels' => array(                    'name'              => esc_html__( 'Neighborhood / Area','wprentals-core'),                    'add_new_item'      => esc_html__( 'Add New Neighborhood / Area','wprentals-core'),                    'new_item_name'     => esc_html__( 'New Neighborhood / Area','wprentals-core')                ),                'hierarchical'  => true,                'query_var'     => true,                'rewrite'       => array( 'slug' => $slug )            )        );    } // end function    private function create_taxonomy_property_features()    {        $category_main_label = stripslashes(esc_html(wprentals_get_option('wp_estate_category_main', '')));        $category_second_label = stripslashes(esc_html(wprentals_get_option('wp_estate_category_second', '')));        $rewrites = wpestate_safe_rewite();        if (isset($rewrites[5])) {            $slug = $rewrites[5];        } else {            $slug = 'features';        }        // add custom taxonomy        register_taxonomy('property_features', 'estate_property', array(                'labels' => array(                    'name' => esc_html__('Features & Amenities', 'wprentals-core'),                    'add_new_item' => esc_html__('Add New Feature', 'wprentals-core'),                    'new_item_name' => esc_html__('New Feature', 'wprentals-core')                ),                'hierarchical' => true,                'query_var' => true,                'rewrite' => array('slug' => $slug)            )        );    }    private function create_taxonomy_property_status()    {        $category_main_label = stripslashes(esc_html(wprentals_get_option('wp_estate_category_main', '')));        $category_second_label = stripslashes(esc_html(wprentals_get_option('wp_estate_category_second', '')));        $rewrites = wpestate_safe_rewite();        if (isset($rewrites[6])) {            $slug = $rewrites[6];        } else {            $slug = 'status';        }        // add custom taxonomy        register_taxonomy('property_status', 'estate_property', array(                'labels' => array(                    'name' => esc_html__('Property Status', 'wprentals-core'),                    'add_new_item' => esc_html__('Add New Status', 'wprentals-core'),                    'new_item_name' => esc_html__('New Status', 'wprentals-core')                ),                'hierarchical' => true,                'query_var' => true,                'rewrite' => array('slug' => $slug)            )        );    } // end function    private function insert_taxonomy_property_category()    {        ////////////////////  insert listings type categories        $actions = array(            'Hotel',        );        foreach ($actions as $key) {            $my_cat = array(                'description' => $key,                'slug' =>sanitize_title($key)            );            if(!term_exists($key, 'property_category') ){                wp_insert_term($key, 'property_category');            }        }    }    private function insert_taxonomy_property_action_category(){        ////////////////////  insert sales and rental categories        $actions = array(            'Villa'        );        foreach ($actions as $key) {            $my_cat = array(                'description' => $key,                'slug' => sanitize_title($key)            );            if (!term_exists($key, 'property_action_category', $my_cat)) {                $return = wp_insert_term($key, 'property_action_category', $my_cat);            }        }    }    private function insert_taxonomy_property_area(){        $actions = array(            "Sant Gervasi"        );        foreach ($actions as $key) {            $my_cat = array(                'description' => $key,                'slug' =>sanitize_title($key)            );            if(!term_exists($key, 'property_area', $my_cat) ){                $return = wp_insert_term($key, 'property_area', $my_cat);            }        }    }    private function insert_taxonomy_property_city()    {           $actions = array(               "Barcelona"           );        foreach ($actions as $key) {            $my_cat = array(                'description' => $key,                'slug' =>sanitize_title($key)            );            if(!term_exists($key, 'property_city', $my_cat) ){                $return =  wp_insert_term($key, 'property_city', $my_cat);            }        }    } // end function    private function insert_taxonomy_property_features()    {        $actions = array(            "Secador de pelo"        );        foreach ($actions as $key) {            $my_cat = array(                'description' => $key,                'slug' =>sanitize_title($key)            );            if(!term_exists($key, 'property_features', $my_cat) ){                $return = wp_insert_term($key, 'property_features', $my_cat);            }        }    }    private function insert_taxonomy_property_status()    {        $actions = array(            "Nuevo estado"        );        foreach ($actions as $key) {            $my_cat = array(                'description' => $key,                'slug' =>sanitize_title($key)            );            if(!term_exists($key, 'property_status', $my_cat) ){                $return = wp_insert_term($key, 'property_status', $my_cat);            }        }    }    private function insert_estate_property()    {        //if( is_user_logged_in() ) {            //$mandatory_fields           =   wprentals_get_option('wp_estate_mandatory_page_fields','');            //$submission_page_fields     =   wprentals_get_option('wp_estate_submission_page_fields','');            //$paid_submission_status    = esc_html ( wprentals_get_option('wp_estate_paid_submission','') );            $paid_submission_status    = 'membership';            //if ( $paid_submission_status!='membership' || ( $paid_submission_status== 'membership' || wpestate_get_current_user_listings($userID) > 0)  ){ // if user can submit            # insert post            $current_user                   =   wp_get_current_user();            $userID                         =   $current_user->ID;            $user_pack                      =   get_the_author_meta( 'package_id' , $userID );            $status_values                  =   esc_html( wprentals_get_option('wp_estate_status_list','') );            $status_values_array            =   explode(",",$status_values);            $allowed_html                   =   array();            $submission_page_fields         =   ( wprentals_get_option('wp_estate_submission_page_fields','') );            $mandatory_fields               =   ( wprentals_get_option('wp_estate_mandatory_page_fields','') );            global $show_err;            $feature_list_array             =   array();            $feature_list                   =   esc_html( get_option('wp_estate_feature_list') );            $feature_list_array             =   explode( ',',$feature_list);            $allowed_html                   =   array();            $new_user_id = 1;            $new_user_id = $current_user->ID;            $submit_title  =   'Villa nueva';            $property_description = 'Descripcion villa nueva';            $new_status = 'publish';            $admin_submission_status= esc_html ( wprentals_get_option('wp_estate_admin_submission','') );            /*            if($admin_submission_status=='no' && $paid_submission_status!='per listing'){                $new_status='publish';            }            if($current_user->ID==''){                $new_user_id=0;            }else{                $new_user_id=$current_user->ID;            }            */            $post = array(                'post_title'	=> $submit_title,                'post_status'	=> $new_status,                'post_type'     => 'estate_property',                'post_author'   => $new_user_id ,                'post_content'  => $property_description            );            //wp_insert_post($post);            $post_id =  wp_insert_post($post);            wpestate_update_listing_no($current_user->ID);            # update taxonomies            if($post_id) {                # taxonomy type of property                $prop_category          = 19;                $prop_category          = get_term( $prop_category, 'property_category');                $prop_category_name     =   '';                if(isset($prop_category->term_id)){                    $prop_category_selected = $prop_category->term_id;                }                if( isset($prop_category->name) ){                    $prop_category_name = $prop_category->name;                    wp_set_object_terms($post_id,$prop_category->name,'property_category');                }                # taxonomy action of property                $prop_action_category   = 84;                $prop_action_category   = get_term( $prop_action_category, 'property_action_category');                $prop_action_category_name  =   '';                if(isset($prop_action_category->term_id)){                    $prop_action_category_selected = $prop_action_category->term_id;                }                if ( isset ($prop_action_category->name) ){                    $prop_action_category_name = $prop_action_category->name;                    wp_set_object_terms($post_id,$prop_action_category->name,'property_action_category');                }                # taxonomy area of property                $property_area          = 89;                $property_area          = get_term( $property_area, 'property_area');                $property_area_name     =   '';                if(isset($property_area->term_id)){                    $property_area_selected = $property_area->term_id;                }                if( isset($property_area->name) ){                    $property_area_name = $property_area->name;                }                # taxonomy city of property                $property_city          = 86;                $property_city          = get_term( $property_city, 'property_city');                $property_city_name     =   '';                if(isset($property_city->term_id)){                    $property_city_selected = $property_city->term_id;                }                if( isset($property_city->name) ){                    $property_city_name = $property_city->name;                }                if( isset($property_city_name) && $property_city_name != 'none' ){                    wp_set_object_terms($post_id,$property_city_name,'property_city');                }                # area uypdate option                if( isset($property_area_name) && $property_area_name != 'none' ){                    //$property_area= wpestate_double_tax_cover($property_area_name,$property_city_name,$post_id);                }                if( isset($property_area_name) && $property_area_name != 'none' && $property_area_name != ''){                    $property_area_obj=   get_term_by('name', $property_area_name, 'property_area');                    $t_id = $property_area_obj->term_id ;                    $term_meta = get_option( "taxonomy_$t_id");                    $allowed_html   =   array();                    $term_meta['cityparent'] =  wp_kses( $property_city_name,$allowed_html);                    //save the option array                    update_option( "taxonomy_$t_id", $term_meta );                }// end if            }// end if            # update post meta            $property_country = "Spain";            $wpestate_guest_no = 1;            $property_affiliate = "";            $property_admin_area='';            //update_post_meta($post_id, 'prop_featured', 0);            //$rental_type =  wprentals_get_option('wp_estate_item_rental_type');            $rental_type=1;            if($rental_type==1){                $wpestate_guest_no=1;            }            //$property_country = wprentals_agolia_dirty_hack($property_country);            //update_post_meta($post_id, 'guest_no', $wpestate_guest_no);            //update_post_meta($post_id, 'property_affiliate',$property_affiliate);            //update_post_meta($post_id, 'property_country', $property_country);            if(isset($_POST['instant_booking'])){                //update_post_meta($post_id,'instant_booking',intval($_POST['instant_booking']));            }            //update_post_meta($post_id, 'property_admin_area', $property_admin_area);            //update_post_meta($post_id, 'pay_status', 'not paid');            //update_post_meta($post_id, 'page_custom_zoom', 16);            //$sidebar =  wprentals_get_option( 'wp_estate_blog_sidebar');            //update_post_meta($post_id, 'sidebar_option', $sidebar);            //$sidebar_name   = wprentals_get_option( 'wp_estate_blog_sidebar_name');            //update_post_meta($post_id, 'sidebar_select', $sidebar_name);            //wpestate_global_check_mandatory($post_id);        //}// end if user    } // end function    private function create_estate_pages()    {        $page_creation=array(            array(                'name'      =>'Advanced Search',                'template'  =>'advanced_search_results.php',            ),            array(                'name'      =>'My Listings',                'template'  =>'user_dashboard.php',            ),            array(                'name'      =>'Add New Listing',                'template'  =>'user_dashboard_add_step1.php',            ),            array(                'name'      =>'Favorites',                'template'  =>'user_dashboard_favorite.php',            ),            array(                'name'      =>'My Inbox',                'template'  =>'user_dashboard_inbox.php',            ),            array(                'name'      =>'Dashboard',                'template'  =>'user_dashboard_main.php',            ),            array(                'name'      =>'Invoices',                'template'  =>'user_dashboard_invoices.php',            ),            array(                'name'      =>'My Profile',                'template'  =>'user_dashboard_profile.php',            ),            array(                'name'      =>'Dashboard - Subscriptions',                'template'  =>'user_dashboard_packs.php',            ),            array(                'name'      =>'My Bookings',                'template'  =>'user_dashboard_my_bookings.php',            ),            array(                'name'      =>'My Reservations',                'template'  =>'user_dashboard_my_reservations.php',            ),            array(                'name'      =>'All in One Calendar',                'template'  =>'user_dashboard_allinone.php',            ),        );        foreach($page_creation as $key=>$template){            if (wpestate_get_template_link($template['template'],1 )=='' ||                wpestate_get_template_link($template['template'],1 )==home_url('/') ){                $my_post = array(                    'post_title'    => $template['name'],                    'post_type'     => 'page',                    'post_status'   => 'publish',                );                $new_id = wp_insert_post($my_post);                update_post_meta($new_id, '_wp_page_template', $template['template'] );            }        }    } // end function    /*        function wpestate_reverse_convert_redux_wp_estate_custom_fields(){            global $wprentals_admin;            $final_array=array();            if(isset($wprentals_admin['wpestate_custom_fields_list']['add_field_name'])){                foreach( $wprentals_admin['wpestate_custom_fields_list']['add_field_name'] as $key=>$value){                    $temp_array=array();                    $temp_array[0]= $wprentals_admin['wpestate_custom_fields_list']['add_field_name'][$key];                    $temp_array[1]= $wprentals_admin['wpestate_custom_fields_list']['add_field_label'][$key];                    $temp_array[3]= $wprentals_admin['wpestate_custom_fields_list']['add_field_order'][$key];                    $temp_array[2]= $wprentals_admin['wpestate_custom_fields_list']['add_field_type'][$key];                    if( isset(  $wprentals_admin['wpestate_custom_fields_list']['add_dropdown_order'][$key] ) ){                        $temp_array[4]= $wprentals_admin['wpestate_custom_fields_list']['add_dropdown_order'][$key];                    }                    $final_array[]=$temp_array;                }            }            return $final_array;        }        */    /*    // Template Name: User Dashboard Submit - Step 1    // Wp Estate Pack    $current_user                   =   wp_get_current_user();    $userID                         =   $current_user->ID;    $user_pack                      =   get_the_author_meta( 'package_id' , $userID );    $status_values                  =   esc_html( wprentals_get_option('wp_estate_status_list','') );    $status_values_array            =   explode(",",$status_values);    $allowed_html                   =   array();    $submission_page_fields         =   ( wprentals_get_option('wp_estate_submission_page_fields','') );    $mandatory_fields               =   ( wprentals_get_option('wp_estate_mandatory_page_fields','') );    global $show_err;////////////////////////////////////////////////////////////////////////////////////////////////// Submit Code///////////////////////////////////////////////////////////////////////////////////////////    if( isset($_POST) && !empty($_POST) ) {        $mandatory_fields           =   wprentals_get_option('wp_estate_mandatory_page_fields','');        $submission_page_fields     =   wprentals_get_option('wp_estate_submission_page_fields','');        if ( !sh_verify_onetime_nonce( $_POST['estatenonce'], 'thisestate') ){            exit('');        }        if ( !isset($_POST['new_estate']) || !wp_verify_nonce($_POST['new_estate'],'submit_new_estate') ){            exit('');        }        $paid_submission_status    = esc_html ( wprentals_get_option('wp_estate_paid_submission','') );        if ( $paid_submission_status!='membership' || ( $paid_submission_status== 'membership' || wpestate_get_current_user_listings($userID) > 0)  ){ // if user can submit            if ( !isset($_POST['new_estate']) || !wp_verify_nonce($_POST['new_estate'],'submit_new_estate') ){                exit('Sorry, your not submiting from site');            }            if( !isset($_POST['prop_category']) ) {                $prop_category  = 0;            }else{                $prop_category  =  $prop_category_selected= intval($_POST['prop_category']);            }            if( !isset($_POST['prop_action_category']) ) {                $prop_action_category   =   0;            }else{                $prop_action_category  = $prop_action_category_selected=  wp_kses($_POST['prop_action_category'],$allowed_html);            }            if( !isset($_POST['property_city']) || $_POST['property_city']=='') {                if( !isset($_POST['property_city_front'])) {                    $property_city  =   '';                }else{                    $property_city  =   wp_kses($_POST['property_city_front'],$allowed_html);                }            }else{                $property_city  =   wp_kses($_POST['property_city'],$allowed_html);            }            if( !isset($_POST['property_area_front']) ) {                $property_area  =   '';            }else{                $property_area  =   wp_kses($_POST['property_area_front'],$allowed_html);            }            if( !isset($_POST['property_country']) ) {                $property_country   =   '';            }else{                $property_country  =   wp_kses($_POST['property_country'],$allowed_html);            }            $allowed_html_desc=array(                'a' => array(                    'href' => array(),                    'title' => array()                ),                'br'        =>  array(),                'em'        =>  array(),                'strong'    =>  array(),                'ul'        =>  array('li'),                'li'        =>  array(),                'code'      =>  array(),                'ol'        =>  array('li'),                'del'       =>  array(                    'datetime'=>array()                ),                'blockquote'=> array(),                'ins'       =>  array(),            );            if( !isset($_POST['property_description']) ) {                $property_description   =   '';            }else{                $property_description  =   wp_kses($_POST['property_description'],$allowed_html_desc);            }            $property_admin_area='';            if(isset($_POST['property_admin_area'])){                $property_admin_area=   wp_kses($_POST['property_admin_area'],$allowed_html);            }            $show_err                       =   '';            $post_id                        =   '';            $submit_title                   =   wp_kses( $_POST['wpestate_title'],$allowed_html );            $wpestate_guest_no              =   0;            if(isset($_POST['guest_no'])){                $wpestate_guest_no          =   intval( $_POST['guest_no']);            }            if( !isset($_POST['property_affiliate']) ) {                $property_affiliate   =   '';            }else{                $property_affiliate  =   esc_url($_POST['property_affiliate']);            }            $has_errors                     =   false;            $errors                         =   array();            if($submit_title==''){                $has_errors=true;                $errors[]=esc_html__( 'Please submit a title for your listing','wprentals');            }            if( is_array($mandatory_fields) && in_array('prop_category_submit', $mandatory_fields)) {                if($prop_category=='' || $prop_category=='-1'){                    $has_errors=true;                    $errors[]=esc_html__( 'Please submit a category','wprentals');                }            }            if( is_array($mandatory_fields) && in_array('prop_action_category_submit', $mandatory_fields)) {                if($prop_action_category=='' || $prop_action_category=='-1'){                    $has_errors=true;                    $errors[]=esc_html__( 'Please submit the second category','wprentals');                }            }            if( is_array($mandatory_fields) && in_array('property_city_front', $mandatory_fields)) {                if($property_city==''){                    $has_errors=true;                    $errors[]=esc_html__( 'Please chose a city.','wprentals');                }            }            if( is_array($mandatory_fields) && in_array('property_area_front', $mandatory_fields)) {                if($property_area==''){                    $has_errors=true;                    $errors[]=esc_html__( 'Please chose an area.','wprentals');                }            }            if( is_array($mandatory_fields) && in_array('property_description', $mandatory_fields)) {                if($property_description==''){                    $has_errors=true;                    $errors[]=esc_html__( 'Please add the description.','wprentals');                }            }            if( is_array($mandatory_fields) && in_array('property_affiliate', $mandatory_fields)) {                if($property_affiliate==''){                    $has_errors=true;                    $errors[]=esc_html__( 'Please add an affiliate link.','wprentals');                }            }            if($has_errors){                foreach($errors as $key=>$value){                    $show_err.='<div class="submit_error">'.esc_html($value).'</div>';                }            }else{                $paid_submission_status = esc_html ( wprentals_get_option('wp_estate_paid_submission','') );                $new_status             = 'pending';                $admin_submission_status= esc_html ( wprentals_get_option('wp_estate_admin_submission','') );                if($admin_submission_status=='no' && $paid_submission_status!='per listing'){                    $new_status='publish';                }                if($current_user->ID==''){                    $new_user_id=0;                }else{                    $new_user_id=$current_user->ID;                }                $post = array(                    'post_title'	=> $submit_title,                    'post_status'	=> $new_status,                    'post_type'     => 'estate_property' ,                    'post_author'   => $new_user_id ,                    'post_content'  => $property_description                );                $post_id =  wp_insert_post($post );                if( $paid_submission_status == 'membership'){ // update pack status                    wpestate_update_listing_no($current_user->ID);                }            }            if($post_id) {                $prop_category                  =   get_term( $prop_category, 'property_category');                if(isset($prop_category->term_id)){                    $prop_category_selected         =   $prop_category->term_id;                }                $prop_action_category           =   get_term( $prop_action_category, 'property_action_category');                if(isset($prop_action_category->term_id)){                    $prop_action_category_selected  =   $prop_action_category->term_id;                }                $prop_category_name         =   '';                $prop_action_category_name  =   '';                if( isset($prop_category->name) ){                    $prop_category_name=$prop_category->name;                    wp_set_object_terms($post_id,$prop_category->name,'property_category');                }                if ( isset ($prop_action_category->name) ){                    $prop_action_category_name=$prop_action_category->name;                    wp_set_object_terms($post_id,$prop_action_category->name,'property_action_category');                }                if( isset($property_city) && $property_city!='none' ){                    wp_set_object_terms($post_id,$property_city,'property_city');                }                if( isset($property_area) && $property_area!='none' ){                    $property_area= wpestate_double_tax_cover($property_area,$property_city,$post_id);                }                if( isset($property_area) && $property_area!='none' && $property_area!=''){                    $property_area_obj=   get_term_by('name', $property_area, 'property_area');                    $t_id = $property_area_obj->term_id ;                    $term_meta = get_option( "taxonomy_$t_id");                    $allowed_html   =   array();                    $term_meta['cityparent'] =  wp_kses( $property_city,$allowed_html);                    //save the option array                    update_option( "taxonomy_$t_id", $term_meta );                }                update_post_meta($post_id, 'prop_featured', 0);                $rental_type =  wprentals_get_option('wp_estate_item_rental_type');                if($rental_type==1){                    $wpestate_guest_no=1;                }                $property_country = wprentals_agolia_dirty_hack($property_country);                update_post_meta($post_id, 'guest_no', $wpestate_guest_no);                update_post_meta($post_id, 'property_affiliate',$property_affiliate);                update_post_meta($post_id, 'property_country', $property_country);                if(isset($_POST['instant_booking'])){                    update_post_meta($post_id,'instant_booking',intval($_POST['instant_booking']));                }                update_post_meta($post_id, 'property_admin_area', $property_admin_area);                update_post_meta($post_id, 'pay_status', 'not paid');                update_post_meta($post_id, 'page_custom_zoom', 16);                $sidebar =  wprentals_get_option( 'wp_estate_blog_sidebar');                update_post_meta($post_id, 'sidebar_option', $sidebar);                $sidebar_name   = wprentals_get_option( 'wp_estate_blog_sidebar_name');                update_post_meta($post_id, 'sidebar_select', $sidebar_name);                wpestate_global_check_mandatory($post_id);                // get user dashboard link                $edit_link                       =   wpestate_get_template_link('user_dashboard_edit_listing.php');                $edit_link_desc                  =   esc_url_raw ( add_query_arg( 'listing_edit', $post_id, $edit_link) ) ;                $edit_link_desc                  =   esc_url_raw ( add_query_arg( 'action', 'description', $edit_link_desc) ) ;                $edit_link_desc                  =   esc_url_raw ( add_query_arg( 'isnew', 1, $edit_link_desc) ) ;                $arguments=array(                    'new_listing_url'   => esc_url (get_permalink($post_id)),                    'new_listing_title' => $submit_title                );                wpestate_select_email_type(get_option('admin_email'),'new_listing_submission',$arguments);                wp_reset_query();                if ( intval($_POST['pointblank']!=1)){                    wp_redirect( $edit_link_desc);                    exit;                }            }        }//end if user can submit    } // end post    */}// end class