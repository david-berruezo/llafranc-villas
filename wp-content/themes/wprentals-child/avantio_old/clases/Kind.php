<?phpclass Kind{    protected $table      = 'dynamic_taxonomy';    protected $primaryKey = 'id';    protected $allowedFields = ['id', 'language','text_title'];    public function insertKinds($xml,$avantio_credentials)    {        # connect to database        $wpdb = Database::getInstance();        foreach($xml->InternationalizedKinds as $kind){            $lang = (string)$kind->Language;            if(!in_array($lang,$avantio_credentials['ACTIVED_LANGUAGES'])) continue;            foreach($kind->MasterKind as $mkind){                # name and id                $mkind_id = intval($mkind->MasterKindCode);                $mking_name = (string)$mkind->MasterKindName;                # insert term if not exist | update term if exist and parent                $actions = array(                    $mking_name                );                foreach ($actions as $key) {                    $my_cat = array(                        'description' => $key,                        'slug' =>sanitize_title($key),                        'parent' => 0                    );                    $my_term_id = term_exists($key, 'property_category', $my_cat);                    if(!$my_term_id){                        $taxonomy_term =  wp_insert_term($key, 'property_category', $my_cat);                    }else{                        $taxonomy_term =  get_term($my_term_id["term_id"],'property_category' , 'array');                    }                }// end foreach                # add option save cityparent category_fetured_image and others                $term_data = array(                    "pagetax" => "",                    "category_featured_image" => "http://localhost/brava_rentals/wp-content/uploads/importedmedia/blogmedia-361789.jpg",                    "category_tax" => "property_category"                );                if(is_array($taxonomy_term))                    $taxonomy = "taxonomy_".$taxonomy_term["term_id"];                if(is_object($taxonomy_term))                    $taxonomy = "taxonomy_".$taxonomy_term->term_id;                $return = add_option($taxonomy, $term_data, $deprecated = '', $autoload = 'yes' );                # create villa de lujo once                if($mking_name = "Villa"){                    $name = "Villa de lujo";                    $mking_name = (string)$name;                    # insert term if not exist | update term if exist and parent                    $actions = array(                        $mking_name                    );                    foreach ($actions as $key) {                        $my_cat = array(                            'description' => $key,                            'slug' =>sanitize_title($key),                            'parent' => 0                        );                        $my_term_id = term_exists($key, 'property_category', $my_cat);                        if(!$my_term_id){                            $taxonomy_term =  wp_insert_term($key, 'property_category', $my_cat);                        }else{                            $taxonomy_term =  get_term($my_term_id["term_id"],'property_category' , 'array');                        }                    }// end foreach                    # add option save cityparent category_fetured_image and others                    $term_data = array(                        "pagetax" => "",                        "category_featured_image" => "http://localhost/brava_rentals/wp-content/uploads/importedmedia/blogmedia-361789.jpg",                        "category_tax" => "property_category"                    );                    if(is_array($taxonomy_term))                        $taxonomy = "taxonomy_".$taxonomy_term["term_id"];                    if(is_object($taxonomy_term))                        $taxonomy = "taxonomy_".$taxonomy_term->term_id;                    $return = add_option($taxonomy, $term_data, $deprecated = '', $autoload = 'yes' );                }// en if                /*                if($lang!='ru'){                    $auto_slug = url_semantica($mking_name);                }else{                    $auto_slug=str_replace(" ","-",$mking_name);                    $auto_slug=str_replace("--","-",$auto_slug);                }                # status actived or paused ONLY ACTIVED VILLA                if($mking_name != "Villa"){                    $status = "PAUSED";                }else{                    $status = "ACTIVED";                }// end if                $sql="INSERT INTO dynamic_taxonomy (id,language,text_title,auto_slug,status) VALUES ('".$mkind_id."','".$lang."','".$db->escapeString($mking_name)."' ,'".$auto_slug."' , '".$status."') ON DUPLICATE KEY UPDATE text_title='".$db->escapeString($mking_name)."',auto_slug='".$auto_slug."' ,status='".$status."' ;";                if (!$db->query($sql)){                    $error = $db->error();                    echo "Error " . $error["code"] . " con la descripción " . $error["message"];                    die();                }// end if                $sql="INSERT INTO dynamic_taxonomy_group (id,language,text_title,auto_slug,status) VALUES ('".$mkind_id."','".$lang."','".$db->escapeString($mking_name)."','".$auto_slug."' , '".$status."') ON DUPLICATE KEY UPDATE text_title='".$db->escapeString($mking_name)."',auto_slug='".$auto_slug."' ,status='".$status."' ;";                if (!$db->query($sql)){                    $error = $db->error();                    echo "Error " . $error["code"] . " con la descripción " . $error["message"];                    die();                }// end if                */            }// end foreach        }// end foreach    } // end function    private function add_two_primary_keys()    {        $forge = \Config\Database::forge();        $forge->addKey('id', TRUE);        $forge->addKey('language', TRUE);    } // end function    private function insertar_actualizar()    {        $data = [            'id'            => "",            'language'      => "",            'text_title'    => ""        ];        $this->save($data);    } // end function}// end class?>