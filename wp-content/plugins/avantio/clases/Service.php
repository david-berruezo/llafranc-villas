<?phpclass Service{    protected $table      = 'dynamic_services';    protected $primaryKey = 'id';    protected $allowedFields = ['id', 'language','text_title'];    /**     * @param $xml     * @param $avantio_credentials     * @param $ts     * @param $ts_referencia     */    public function insertServices($xml,$avantio_credentials)    {        # connect to database        $wpdb = Database::getInstance();        # term_vector        $term_vector = array();        $max_elements = 0;        $counter_element = 0;        $counter_service = 0;        foreach($xml->Service as $service){            # language and term vector language            //$counter_element = 0;            //if($counter_service < 2) {                foreach ($service->Name as $trad) {                    if (!in_array((string)$trad->Language, $avantio_credentials['ACTIVED_LANGUAGES'])) continue;                    # data                    $service_code = intval($service->Code);                    $service_name = (string)$trad->Text;                    $lang = (string)$trad->Language;                    $term_vector[$lang][$counter_element] = array();                    $name_total_service = $service_name . "-" . $lang;                    # es | en  | others                    $my_cat = array(                        'description' => $name_total_service,                        'slug' => sanitize_title($name_total_service),                        'parent' => 0                    );                    //p_($my_cat);                    $term_vector[$lang][$counter_element] = term_exists($name_total_service, 'extra_services', $my_cat);                    //p_($term_vector);                    if (!$term_vector[$lang][$counter_element]) {                        $term_vector[$lang][$counter_element] = wp_insert_term($name_total_service, 'extra_services', $my_cat);                        //p_($term_vector);                        pll_set_term_language($term_vector[$lang][$counter_element]["term_id"], $lang);                    } else {                        pll_set_term_language($term_vector[$lang][$counter_element]["term_id"], $lang);                    }                    # change name                    $word = "-" . $lang;                    $final_name = str_replace($word, "", $name_total_service);                    $args = array('name' => $final_name, 'description' => $final_name);                    //print_r($args);                    wp_update_term($term_vector[$lang][$counter_element]["term_id"], 'extra_services', $args);                    # add option save cityparent category_fetured_image and others                    $term_data = array(                        "pagetax" => "",                        "category_featured_image" => "http://localhost/brava_rentals/wp-content/uploads/importedmedia/blogmedia-361789.jpg",                        "category_tax" => "extra_services"                    );                    if (is_array($term_vector[$lang][$counter_element]))                        $taxonomy = "taxonomy_".$term_vector[$lang][$counter_element]["term_id"];                    if(is_object($term_vector[$lang][$counter_element]))                        $taxonomy = "taxonomy_".$term_vector[$lang][$counter_element]->term_id;                    if($counter_element > $max_elements)                        $max_elements = $counter_element;                }// end foreach service by lang                if ($counter_element > $max_elements)                    $max_elements = $counter_element;            //}// endi f            $counter_service++;            $counter_element++;        } // end foreach service        # save relationship polylang languages        for($i = 0; $i < $max_elements; $i++) {            $vector_plantilla = array();            for($j = 0; $j < count($avantio_credentials['ACTIVED_LANGUAGES']); $j++) {                $lang = $avantio_credentials['ACTIVED_LANGUAGES'][$j];                $vector_plantilla[$lang] = $term_vector[$lang][$i]["term_id"];            }// end for            pll_save_term_translations($vector_plantilla);            //my_print($vector_plantilla);        }// end for    } // end function    /**     *     */    private function add_two_primary_keys()    {        $forge = \Config\Database::forge();        $forge->addKey('id', TRUE);        $forge->addKey('language', TRUE);    } // end function    private function insertar_actualizar()    {        $data = [            'id'            => "",            'language'      => "",            'text_title'    => ""        ];        $this->save($data);    } // end function}// end class?>